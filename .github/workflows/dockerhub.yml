name: DockerHub

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  R-CMD-check:
    name: DockerHub-push
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.PAT_GITHUB }}
      RGL_USE_NULL: TRUE
      GITHUB_REPO: ${{ github.repository }}
      ## Can save variable as GitHub Secret, or manually enter DockerHub 
      ## username here (e.g. "bschilder").
      DOCKER_USERNAME: "bschilder"
      ## Can save variable as GitHub Secret, or manually enter DockerHub 
      ## organization name (or simply username) here (e.g. "neurogenomicslab").
      DOCKER_ORG: "neurogenomicslab"
    steps:
      - uses: actions/checkout@v2
      - name: Setup R
        uses: r-lib/actions/setup-r@v1
        with:
          install-r: false
        
      - name: Get R package info
        run: |
          #### DockerHub repos must be lowercase (,,) ####
          name=$(grep '^Package:' DESCRIPTION | cut -d\   -f2)
          echo "packageName=${name,,}" >> $GITHUB_ENV
          echo $name
          
          version=$(grep Version DESCRIPTION | grep -o "[0-9.]\+")
          echo "packageVersion=${version}" >> $GITHUB_ENV
          echo $version
        shell: bash {0}   
      
      # Make sure login works first
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      ## Will use ./Dockerfile included in repo.
      ## IMPORTANT: Must include CRAN and/or Bioc checks within the Dockerfile.
      ## This pipeline does not currrently run checks outside of the Dockerfile.
      - name: Build service
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: |
            ${{ env.DOCKER_ORG }}/${{ env.packageName }}:${{ env.packageVersion }}
            ${{ env.DOCKER_ORG }}/${{ env.packageName }}:latest 

      - name: push service
        run: |
          docker push ${{ env.DOCKER_ORG }}/${{ env.packageName }}:${{ env.packageVersion }}
          docker push ${{ env.DOCKER_ORG }}/${{ env.packageName }}:latest
          